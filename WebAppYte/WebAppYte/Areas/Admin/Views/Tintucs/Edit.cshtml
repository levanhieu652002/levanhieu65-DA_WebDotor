@model WebAppYte.Models.BaiViet
<script src="~/Common/ckeditor/ckeditor.js"></script>
<script src="~/Common/ckfinder/ckfinder.js"></script>
<script src="~/Scripts/jquery-3.4.1.slim.js"></script>
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAd.cshtml";
}

<h2>Chỉnh sửa tin tức</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Mabv)

        <div class="form-group">
            @Html.LabelFor(model => model.Tieude, "Tiêu đề", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tieude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tieude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Noidung, "Nội dung", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Noidung, new { style = "width: 100%;", htmlAttributes = new { @class = "form-control" },@id="noidung" })


                @Html.ValidationMessageFor(model => model.Noidung, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hinhanh, "Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="form-control" id="tenAnh" readonly name="anh">
                @Html.HiddenFor(model => model.Hinhanh, new { htmlAttributes = new { @class = "form-control", @id = "duongDanAnh" } })
                <button id="chonDuongDanAnh" type="button" class="btn btn-info"> Chọn ảnh<i class="fas fa-image font-size-20"></i></button>
                @Html.ValidationMessageFor(model => model.Hinhanh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mota, "Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mota, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mota, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ngaydang, "Ngày đăng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control text-box single-line" data-val="true" data-val-date="The field Bắt đầu must be a date." id="ngaydang" name="ngaydang" type="date" value="@ViewBag.ngay" />
                <span class="field-validation-valid text-danger" data-valmsg-for="ngaydang" data-valmsg-replace="true"></span>
            </div>
            @Html.ValidationMessageFor(model => model.Ngaydang, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Maloai, "Thể loại", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("maloai", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Maloai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    document.getElementById('chonDuongDanAnh').addEventListener('click', function () {
        var input = document.createElement('input');
        input.type = 'file';

        input.onchange = function (e) {
            var file = e.target.files[0];
            var fileName = file.name;

            var formData = new FormData();
            formData.append('file', file);

            fetch('/Upload/Upload', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    document.getElementById('tenAnh').value = fileName;
                    document.getElementById('duongDanAnh').value = data.Path;
                })
                .catch(error => console.error('Error:', error));
        };

        input.click();
    });
</script>
<script language="javascrip" type="text/javascript">


    var ckeditor;
    function createEditor(languageCode, id) {
        var editor = CKEDITOR.replace(id, { language: languageCode });
    }
    $(function () { createEditor('vi', 'noidung') });
</script>


<div>
    @Html.ActionLink("Quay lại", "Index")
</div>

